package de.uulm.se.couchedit.processing.common.repository

import de.uulm.se.couchedit.model.base.Element
import de.uulm.se.couchedit.processing.common.model.ModelDiff
import de.uulm.se.couchedit.processing.common.model.diffcollection.DiffCollection
import de.uulm.se.couchedit.processing.common.model.diffcollection.TimedDiffCollection
import de.uulm.se.couchedit.processing.common.model.time.VectorTimestamp

/**
 * Every ModificationPort has its own ModelRepository, which represents its "own little world".
 * No references model objects should be shared between those different Repositories, so that no problems with thread
 * safety will occur.
 * The ModelRepository contains the relevant upstream elements for the ModificationPort at hand as well as the target
 * information (the latter is the information for which the ModificationPort wants to publish Diffs for)
 */
interface ModelRepository : ModelRepositoryRead {
    /**
     * Puts the given element into the Repository, and returns the Diffs generated by that operation.
     *
     * The behavior is as follows:
     * * If the given [e] is already stored in this ModelRepository,
     *
     * @param e The Element to be stored
     * @param timestamp The timestamp with which this action should be done in the ModelRepository.
     * @return ModelDiffs which represent the actions taken to insert the element into this repository.
     */
    fun store(e: Element, timestamp: VectorTimestamp? = null): TimedDiffCollection

    /**
     * Removes the element with the given ID from this collection. If the element does not exist, an empty
     * [DiffCollection] will be returned.
     *
     * @param id The ID of the element to be removed
     * @return The [DiffCollection] representing all actions taken in order to remove the element
     */
    fun remove(id: String, timestamp: VectorTimestamp? = null): TimedDiffCollection

    fun refresh(id: String): TimedDiffCollection

    /**
     * Removes all [Element]s from this Repository.
     *
     * @return DiffCollection containing remove operations that were executed in this Repository.
     */
    fun clear(): TimedDiffCollection

    /**
     * This method creates a [TimedDiffCollection] from all Elements currently present in this ModelRepository
     */
    fun dump(): TimedDiffCollection

    /**
     * Adds the given [listener] to the set of listeners on this Repository.
     * It is called every time an Element gets added or removed.
     */
    fun addOnChangeListener(id: String, listener: (ModelDiff) -> Unit)

    /**
     * Removes the change listener with the given [id] which has previously been added with [addOnChangeListener].
     */
    fun removeOnChangeListener(id: String): Boolean
}
